-- Creacion de las tablas

create table USUARIO(
    NOMBRE varchar NOT NULL,
    CLAVE varchar NOT NULL,
    TIPO varchar NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY (NOMBRE)
);

create table TARJETA(
    NUMERO integer NOT NULL,
    FECHA_V date NOT NULL,
    BANCO varchar NOT NULL,
    RIF_T integer NOT NULL,
    CONSTRAINT PK_tarjeta PRIMARY KEY (NUMERO)
);

create table CLIENTE(
    RIF integer NOT NULL,
    NOMBRE varchar NOT NULL,
    DIRECCION varchar NOT NULL,
    CONSTRAINT PK_CLIENTE PRIMARY KEY (RIF)
);

create table FACTURA(
    FECHA date NOT NULL,
    OBSERVACIONES varchar NOT NULL,
    MONTO integer NOT NULL,
    RIF_C integer NOT NULL,
    CONSTRAINT PK_FACTURA PRIMARY KEY (FECHA,RIF_C)
);

create table AFILIA(
    RIF_C integer NOT NULL,
    CODIGO_P integer NOT NULL,
    NUMERO_T integer NOT NULL,
    CONSTRAINT PK_AFILIA PRIMARY KEY (RIF_C,CODIGO_P,NUMERO_T)
);

create table PLAN(
    CODIGO integer NOT NULL,
    NOMBRE varchar NOT NULL,
    TARIFA integer NOT NULL,
    CONSTRAINT PK_PLAN PRIMARY KEY (CODIGO)
);

create table PREPAGO(
    CODIGO_P integer NOT NULL,
    CONSTRAINT PK_PREPAGO PRIMARY KEY (CODIGO_P)
);

create table POSTPAGO(
    CODIGO_P integer NOT NULL,
    CONSTRAINT PK_POSTPAGO PRIMARY KEY (CODIGO_P)
);

create table PRODUCTO(
    CODIGO integer NOT NULL,
    NOMBRE varchar NOT NULL,
    DESCRIPCION varchar NOT NULL,
    CODIGO_P integer NOT NULL,
    RIF_C integer NOT NULL,
    FECHA_A date NOT NULL,
    SALDO integer NOT NULL,
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (CODIGO)
);

create table SERVICIO(
    CODIGO integer NOT NULL,
    NOMBRE varchar NOT NULL,
    COSTO integer NOT NULL,
    CODIGO_TS integer NOT NULL,
    CONSTRAINT PK_SERVICIO PRIMARY KEY (CODIGO)
);

create table CONTRATA(
    RIF_C integer NOT NULL,
    CODIGO_PQ integer NOT NULL,
    CODIGO_PR integer NOT NULL,
    FECHA date NOT NULL,
    TIPO varchar NOT NULL,
    CONSTRAINT PK_CONTRATA PRIMARY KEY (RIF_C,CODIGO_PQ,CODIGO_PR,FECHA)
);

create table CONSUMO(
    CODIGO_S integer NOT NULL,
    CODIGO_PR integer NOT NULL,
    FECHA date NOT NULL,
    CANTIDAD integer NOT NULL,
    CONSTRAINT PK_CONSUMO PRIMARY KEY (CODIGO_S,CODIGO_PR,FECHA)
);

create table PAQUETE(
    CODIGO integer NOT NULL,
    TIPO varchar NOT NULL,
    TARIFA integer NOT NULL,
    NOMBRE varchar NOT NULL,
    CONSTRAINT PK_PAQUETE PRIMARY KEY (CODIGO)
);

create table CONTIENE(
    CODIGO_P integer NOT NULL,
    CODIGO_PQ integer NOT NULL,
    CONSTRAINT PK_CONTIENE PRIMARY KEY (CODIGO_P,CODIGO_PQ)
);

create table CONFORMA(
    CODIGO_PQ integer NOT NULL,
    CODIGO_S integer NOT NULL,
    CANTIDAD integer NOT NULL,
    CONSTRAINT PK_CONFORMA PRIMARY KEY (CODIGO_PQ,CODIGO_S)
);

create table TIPO_SERVICIO(
    NOMBRE varchar NOT NULL,
    CODIGO integer NOT NULL,
    CONSTRAINT PK_TIPO_SERVICIO PRIMARY KEY (CODIGO)
);    

-- Restricciones de clave foranea

ALTER TABLE SERVICIO ADD CONSTRAINT FK_SERVICIO_TIPO_SERVICIO
    FOREIGN KEY(CODIGO_TS) REFERENCES TIPO_SERVICIO(CODIGO);

ALTER TABLE TARJETA ADD CONSTRAINT FK_TARJETA_CLIENTE 
    FOREIGN KEY(RIF_T) REFERENCES CLIENTE(RIF);
	
ALTER TABLE FACTURA ADD CONSTRAINT FK_FACTURA_RIF_C
    FOREIGN KEY(RIF_C) REFERENCES CLIENTE(RIF);	
   
ALTER TABLE AFILIA ADD CONSTRAINT FK_AFILIA_RIF_C
    FOREIGN KEY(RIF_C) REFERENCES CLIENTE(RIF);

ALTER TABLE AFILIA ADD CONSTRAINT FK_AFILIA_NUMERO_T
    FOREIGN KEY(NUMERO_T) REFERENCES TARJETA(NUMERO);

ALTER TABLE AFILIA ADD CONSTRAINT FK_AFILIA_CODIGO_P
    FOREIGN KEY(CODIGO_P) REFERENCES PLAN(CODIGO);	
	
ALTER TABLE PREPAGO ADD CONSTRAINT FK_PREPAGO_CODIGO_P
    FOREIGN KEY(CODIGO_P) REFERENCES PLAN(CODIGO);

ALTER TABLE POSTPAGO ADD CONSTRAINT FK_POSTPAGO_CODIGO_P
    FOREIGN KEY(CODIGO_P) REFERENCES PLAN(CODIGO);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_CODIGO_P
    FOREIGN KEY(CODIGO_P) REFERENCES PLAN(CODIGO);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_RIF_C
    FOREIGN KEY(RIF_C) REFERENCES CLIENTE(RIF);	

ALTER TABLE CONTRATA ADD CONSTRAINT FK_CONTRATA_CODIGO_PQ
    FOREIGN KEY(CODIGO_PQ) REFERENCES PAQUETE(CODIGO);

ALTER TABLE CONTRATA ADD CONSTRAINT FK_CONTRATA_RIF_C
    FOREIGN KEY(RIF_C) REFERENCES CLIENTE(RIF);

ALTER TABLE CONTRATA ADD CONSTRAINT FK_CONTRATA_CODIGO_PR
    FOREIGN KEY(CODIGO_PR) REFERENCES PRODUCTO(CODIGO);

ALTER TABLE CONSUMO ADD CONSTRAINT FK_CONSUMO_CODIGO_S
    FOREIGN KEY(CODIGO_S) REFERENCES SERVICIO(CODIGO);	

ALTER TABLE CONSUMO ADD CONSTRAINT FK_CONSUMO_CODIGO_PR
    FOREIGN KEY(CODIGO_PR) REFERENCES PRODUCTO(CODIGO);

ALTER TABLE CONTIENE ADD CONSTRAINT FK_CONTIENE_CODIGO_P
    FOREIGN KEY(CODIGO_P) REFERENCES PLAN(CODIGO);

ALTER TABLE CONTIENE ADD CONSTRAINT FK_CONTIENE_CODIGO_PQ
    FOREIGN KEY(CODIGO_PQ) REFERENCES PAQUETE(CODIGO);

ALTER TABLE CONFORMA ADD CONSTRAINT FK_CONFORMA_CODIGO_PQ
    FOREIGN KEY(CODIGO_PQ) REFERENCES PAQUETE(CODIGO);

ALTER TABLE CONFORMA ADD CONSTRAINT FK_CONFORMA_CODIGO_S
    FOREIGN KEY(CODIGO_S) REFERENCES SERVICIO(CODIGO);

-- Restricciones de dominio					

ALTER TABLE FACTURA ADD CONSTRAINT DOM_FACTURA_MONTO CHECK (MONTO >= 0);	
	
ALTER TABLE PLAN ADD CONSTRAINT DOM_PLAN_TARIFA CHECK (TARIFA >= 0);	
	
ALTER TABLE SERVICIO ADD CONSTRAINT DOM_SERVICIO_COSTO CHECK (COSTO >= 0);	
	
ALTER TABLE CONSUMO ADD CONSTRAINT DOM_CONSUMO_CANTIDAD CHECK (CANTIDAD >= 0);

ALTER TABLE PAQUETE ADD CONSTRAINT DOM_PAQUETE_TIPO CHECK (TIPO IN ('PREPAGO','POSTPAGO','AMBOS'));

ALTER TABLE PAQUETE ADD CONSTRAINT DOM_PAQUETE_TARIFA CHECK (TARIFA >= 0);

ALTER TABLE CONTRATA ADD CONSTRAINT DOM_CONTRATA_TIPO CHECK (TIPO IN ('MENSUAL','UNICO'));	

ALTER TABLE CONFORMA ADD CONSTRAINT DOM_CONFORMA_CANTIDAD CHECK (CANTIDAD > 0);


-- Triggers para restricciones explicitas

-- Solo se puede contratar un servicio si el producto pertenece al cliente

CREATE OR REPLACE FUNCTION serv_prod_pert()
RETURNS TRIGGER AS $serv_prod_pert$
    DECLARE
        tiene_pr integer;

    BEGIN
        SELECT Count(*) INTO tiene_pr FROM PRODUCTO P
        WHERE (NEW.CODIGO_PR = P.CODIGO) AND (P.RIF_C = NEW.RIF_C);

        IF (tiene_pr > 0) THEN
            RETURN NEW;
        END IF;

        RAISE EXCEPTION 'No se puede contratar el servicio, el producto no pertenece al cliente';       
        RETURN NULL;

    END;
$serv_prod_pert$ LANGUAGE plpgsql;

CREATE TRIGGER prod_pertenece_cliente
    BEFORE INSERT ON CONTRATA
    FOR EACH ROW
    EXECUTE PROCEDURE serv_prod_pert();



-- No se puede asignar paquetes prepago a planes postpago y viceversa

CREATE OR REPLACE FUNCTION contrata_paquete()
RETURNS TRIGGER AS $contrata_paquete$
    DECLARE
        tipo_plan_paquete varchar;
        es_prepago integer;
        es_postpago integer;
        cod_plan integer;

    BEGIN
        SELECT P.TIPO into tipo_plan_paquete FROM PAQUETE P
        WHERE (P.CODIGO = NEW.CODIGO_PQ);

        SELECT P.CODIGO_P into cod_plan FROM PRODUCTO P
        WHERE (P.CODIGO = NEW.CODIGO_PR);

        IF (tipo_plan_paquete = 'PREPAGO') THEN

            SELECT Count(*) into es_prepago FROM PREPAGO P
            WHERE (P.CODIGO_P = cod_plan);

            IF (es_prepago > 0) THEN
                RETURN NEW;
            ELSE
                RAISE EXCEPTION 'No se puede contratar el servicio, es solo para planes prepago';
            END IF;

        ELSIF (tipo_plan_paquete = 'POSTPAGO') THEN

            SELECT Count(*) into es_postpago FROM POSTPAGO P
            WHERE (P.CODIGO_P = cod_plan);

            IF (es_postpago > 0) THEN
                RETURN NEW;
            ELSE
                RAISE EXCEPTION 'No se puede contratar el servicio, es solo para planes postpago';
            END IF;

        ELSE
            RETURN NEW;

        END IF;                    
        
    END;
$contrata_paquete$ LANGUAGE plpgsql;

CREATE TRIGGER contrata_paquete
    BEFORE INSERT ON CONTRATA
    FOR EACH ROW
    EXECUTE PROCEDURE contrata_paquete();

